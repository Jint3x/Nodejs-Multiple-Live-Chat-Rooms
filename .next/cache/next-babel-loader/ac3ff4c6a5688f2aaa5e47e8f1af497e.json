{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\n\nvar Post = function Post() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useState = useState(\"\"),\n      val = _useState[0],\n      setVal = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      web = _useState2[0],\n      setWeb = _useState2[1];\n\n  function change(e) {\n    setVal(e.target.value);\n    setWeb(e);\n  }\n\n  function send() {\n    setWeb(val);\n  } // Connect to webhook upon rendering the page\n\n\n  useEffect(function () {\n    var id = location.pathname.split(\"/\")[location.pathname.split(\"/\").length - 1];\n    var ws = new WebSocket(\"ws://localhost:8080/\" + id);\n    console.log(ws.readyState);\n    ws.addEventListener(\"open\", connected);\n    ws.addEventListener(\"message\", logMe);\n\n    if (ws.readyState === 1) {\n      ws.send(web);\n    }\n\n    function connected() {\n      console.log(\"connected\");\n    }\n\n    function logMe(info) {\n      console.log(info);\n    } //return (() => {\n    // ws.removeEventListener(\"open\", connected)\n    //})\n\n  }, [web]);\n  return __jsx(Input, {\n    value: val,\n    change: change,\n    log: send\n  });\n}; // Render the input and the submit button\n\n\n_s(Post, \"vdnK14QPggxuawIduyk1crDViTs=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\n\nfunction Input(props) {\n  return __jsx(\"div\", null, __jsx(\"input\", {\n    value: props.value,\n    onChange: props.change\n  }), __jsx(\"button\", {\n    onClick: props.log\n  }, \"Click me to change\"));\n}\n\n_c2 = Input;\nexport default Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"sources":["C:/Users/Shi/Desktop/Live Chat/pages/chat/[id].js"],"names":["useRouter","useEffect","useState","Post","router","id","query","val","setVal","web","setWeb","change","e","target","value","send","location","pathname","split","length","ws","WebSocket","console","log","readyState","addEventListener","connected","logMe","info","Input","props"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AADiB,MAETK,EAFS,GAEFD,MAAM,CAACE,KAFL,CAETD,EAFS;;AAAA,kBAGKH,QAAQ,CAAC,EAAD,CAHb;AAAA,MAGVK,GAHU;AAAA,MAGLC,MAHK;;AAAA,mBAIKN,QAAQ,CAAC,EAAD,CAJb;AAAA,MAIVO,GAJU;AAAA,MAILC,MAJK;;AAQjB,WAASC,MAAT,CAAgBC,CAAhB,EAAmB;AACfJ,IAAAA,MAAM,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACAJ,IAAAA,MAAM,CAACE,CAAD,CAAN;AACH;;AAED,WAASG,IAAT,GAAgB;AACZL,IAAAA,MAAM,CAACH,GAAD,CAAN;AACH,GAfgB,CAkBnB;;;AACEN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAII,EAAE,GAAGW,QAAQ,CAACC,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BF,QAAQ,CAACC,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,MAA7B,GAAsC,CAAnE,CAAT;AACA,QAAIC,EAAE,GAAG,IAAIC,SAAJ,CAAc,yBAAuBhB,EAArC,CAAT;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAE,CAACI,UAAf;AACAJ,IAAAA,EAAE,CAACK,gBAAH,CAAoB,MAApB,EAA4BC,SAA5B;AACAN,IAAAA,EAAE,CAACK,gBAAH,CAAoB,SAApB,EAA+BE,KAA/B;;AAEA,QAAIP,EAAE,CAACI,UAAH,KAAkB,CAAtB,EAAyB;AACzBJ,MAAAA,EAAE,CAACL,IAAH,CAAQN,GAAR;AACC;;AAGD,aAASiB,SAAT,GAAqB;AACjBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;;AAED,aAASI,KAAT,CAAeC,IAAf,EAAqB;AACjBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACH,KAlBa,CAoBd;AACG;AACH;;AACD,GAvBQ,EAuBN,CAACnB,GAAD,CAvBM,CAAT;AA4BA,SAAO,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,GAAd;AAAmB,IAAA,MAAM,EAAEI,MAA3B;AAAmC,IAAA,GAAG,EAAEI;AAAxC,IAAP;AACD,CAhDD,C,CAkDA;;;GAlDMZ,I;UACWH,S;;;KADXG,I;;AAmDN,SAAS0B,KAAT,CAAeC,KAAf,EAAsB;AAClB,SACI,mBACI;AAAO,IAAA,KAAK,EAAEA,KAAK,CAAChB,KAApB;AAA2B,IAAA,QAAQ,EAAEgB,KAAK,CAACnB;AAA3C,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAEmB,KAAK,CAACP;AAAvB,0BAFJ,CADJ;AAMH;;MAPQM,K;AAST,eAAe1B,IAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst Post = () => {\r\n  const router = useRouter()\r\n  const { id } = router.query\r\n  const [val, setVal] = useState(\"\")\r\n  const [web, setWeb] = useState(\"\")\r\n\r\n\r\n\r\n  function change(e) {\r\n      setVal(e.target.value)\r\n      setWeb(e)\r\n  }\r\n\r\n  function send() {\r\n      setWeb(val)\r\n  }\r\n\r\n\r\n// Connect to webhook upon rendering the page\r\n  useEffect(() => {\r\n    let id = location.pathname.split(\"/\")[location.pathname.split(\"/\").length - 1];\r\n    let ws = new WebSocket(\"ws://localhost:8080/\"+id);\r\n    console.log(ws.readyState)\r\n    ws.addEventListener(\"open\", connected)\r\n    ws.addEventListener(\"message\", logMe)\r\n\r\n    if (ws.readyState === 1) {\r\n    ws.send(web) \r\n    }\r\n\r\n\r\n    function connected (){\r\n        console.log(\"connected\")\r\n    }\r\n\r\n    function logMe(info) {\r\n        console.log(info)\r\n    }\r\n\r\n    //return (() => {\r\n       // ws.removeEventListener(\"open\", connected)\r\n    //})\r\n  }, [web])\r\n\r\n\r\n\r\n\r\n  return <Input value={val} change={change} log={send} />\r\n}\r\n\r\n// Render the input and the submit button\r\nfunction Input(props) {\r\n    return (\r\n        <div>\r\n            <input value={props.value} onChange={props.change} />\r\n            <button onClick={props.log}>Click me to change</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}