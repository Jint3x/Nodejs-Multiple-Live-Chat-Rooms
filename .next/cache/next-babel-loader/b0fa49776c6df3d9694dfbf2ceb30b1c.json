{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\n\nvar Post = function Post() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useState = useState(\"\"),\n      val = _useState[0],\n      setVal = _useState[1];\n\n  function change(e) {\n    setVal(e.target.value);\n  }\n\n  var id2 = location.pathname.split(\"/\")[location.pathname.split(\"/\").length - 1];\n  var ws = new WebSocket(\"ws://localhost:8080/\" + id2);\n  ws.addEventListener(\"open\", connected);\n\n  function connected() {\n    console.log(\"connected\");\n  }\n  /*\r\n  // Connect to webhook upon rendering the page\r\n  useEffect(() => {\r\n  let id = location.pathname.split(\"/\")[location.pathname.split(\"/\").length - 1];\r\n  let ws = new WebSocket(\"ws://localhost:8080/\"+id);\r\n    ws.addEventListener(\"open\", connected)\r\n    function connected () {\r\n      console.log(\"connected\")\r\n  }\r\n    function log() {\r\n      console.log(val)\r\n  }\r\n  \r\n  //return (() => {\r\n     // ws.removeEventListener(\"open\", connected)\r\n  //})\r\n  }, [])\r\n  */\n\n\n  return __jsx(Input, {\n    value: val,\n    change: change\n  });\n}; // Render the input and the submit button\n\n\n_s(Post, \"TvSJzjkcw8SJM/3tTpYynb+f9e0=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\n\nfunction Input(props) {\n  return __jsx(\"div\", null, __jsx(\"input\", {\n    value: props.value,\n    onChange: props.change\n  }), __jsx(\"button\", {\n    onClick: props.log\n  }, \"Click me to change\"));\n}\n\n_c2 = Input;\nexport default Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"sources":["C:/Users/Shi/Desktop/Live Chat/pages/chat/[id].js"],"names":["useRouter","useEffect","useState","Post","router","id","query","val","setVal","change","e","target","value","id2","location","pathname","split","length","ws","WebSocket","addEventListener","connected","console","log","Input","props"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AADiB,MAETK,EAFS,GAEFD,MAAM,CAACE,KAFL,CAETD,EAFS;;AAAA,kBAGKH,QAAQ,CAAC,EAAD,CAHb;AAAA,MAGVK,GAHU;AAAA,MAGLC,MAHK;;AAOjB,WAASC,MAAT,CAAgBC,CAAhB,EAAmB;AACfF,IAAAA,MAAM,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACH;;AAEC,MAAIC,GAAG,GAAGC,QAAQ,CAACC,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BF,QAAQ,CAACC,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,MAA7B,GAAsC,CAAnE,CAAV;AACA,MAAIC,EAAE,GAAG,IAAIC,SAAJ,CAAc,yBAAuBN,GAArC,CAAT;AAEAK,EAAAA,EAAE,CAACE,gBAAH,CAAoB,MAApB,EAA4BC,SAA5B;;AAEA,WAASA,SAAT,GAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;AAID;;;;;;;;;;;;;;;;;;;;AA2BF,SAAO,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEhB,GAAd;AAAmB,IAAA,MAAM,EAAEE;AAA3B,IAAP;AACD,CAlDD,C,CAoDA;;;GApDMN,I;UACWH,S;;;KADXG,I;;AAqDN,SAASqB,KAAT,CAAeC,KAAf,EAAsB;AAClB,SACI,mBACI;AAAO,IAAA,KAAK,EAAEA,KAAK,CAACb,KAApB;AAA2B,IAAA,QAAQ,EAAEa,KAAK,CAAChB;AAA3C,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAEgB,KAAK,CAACF;AAAvB,0BAFJ,CADJ;AAMH;;MAPQC,K;AAST,eAAerB,IAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst Post = () => {\r\n  const router = useRouter()\r\n  const { id } = router.query\r\n  const [val, setVal] = useState(\"\")\r\n\r\n\r\n\r\n  function change(e) {\r\n      setVal(e.target.value)\r\n  }\r\n\r\n    let id2 = location.pathname.split(\"/\")[location.pathname.split(\"/\").length - 1];\r\n    let ws = new WebSocket(\"ws://localhost:8080/\"+id2);\r\n\r\n    ws.addEventListener(\"open\", connected)\r\n\r\n    function connected () {\r\n        console.log(\"connected\")\r\n    }\r\n\r\n\r\n \r\n    /*\r\n\r\n\r\n// Connect to webhook upon rendering the page\r\n  useEffect(() => {\r\n    let id = location.pathname.split(\"/\")[location.pathname.split(\"/\").length - 1];\r\n    let ws = new WebSocket(\"ws://localhost:8080/\"+id);\r\n\r\n    ws.addEventListener(\"open\", connected)\r\n\r\n    function connected () {\r\n        console.log(\"connected\")\r\n    }\r\n\r\n    function log() {\r\n        console.log(val)\r\n    }\r\n  \r\n\r\n    //return (() => {\r\n       // ws.removeEventListener(\"open\", connected)\r\n    //})\r\n  }, [])\r\n\r\n*/\r\n\r\n\r\n  return <Input value={val} change={change} />\r\n}\r\n\r\n// Render the input and the submit button\r\nfunction Input(props) {\r\n    return (\r\n        <div>\r\n            <input value={props.value} onChange={props.change} />\r\n            <button onClick={props.log}>Click me to change</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}